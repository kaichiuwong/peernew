DELIMITER $$
 
CREATE PROCEDURE sp_get_student_assignment_list(
    IN username VARCHAR(10)
)
BEGIN
    SELECT a.*,fn_get_unit_code(a.unit_id) as unit
    FROM   assignment a, unit_enrol ue
    WHERE  a.unit_id = ue.unit_id
    AND    ue.user_id = username ;
END $$
 
DELIMITER ;

DELIMITER $$

CREATE FUNCTION fn_is_allow_view_assignment(
    username VARCHAR(10),
    asg_id   INT
) 
RETURNS INT
DETERMINISTIC
BEGIN
 DECLARE rtn_result INT DEFAULT 0;
  
  SELECT count(1)
  INTO   rtn_result
  FROM   assignment a, unit_enrol ue
  WHERE  a.unit_id = ue.unit_id
  AND    ue.user_id = username
  AND    a.id = asg_id  ;
  
  RETURN rtn_result ;
END 

$$

DELIMITER ;

DELIMITER $$

CREATE FUNCTION fn_get_unit_code(
    unit_id INT
) 
RETURNS VARCHAR(20) 
DETERMINISTIC
BEGIN
 DECLARE rtnstr VARCHAR(20);
 
  SELECT unit_code 
  INTO   rtnstr
  FROM   unit
  WHERE  id=unit_id;
  
  RETURN rtnstr ;
END 

$$

DELIMITER ;


create view sv_assignment_progress as
select u.username, u.id, u.last_name, u.first_name, s.topic, now() as submission_date, null as peer_assess, null as feedback, ue.unit_id, s.assign_id
from unit_enrol ue
join user u on ue.user_id=u.username and ue.unit_id=1
left join sv_assignment_topic_summary s on ue.user_id=s.user_id and ue.unit_id=1 and assign_id=1




CREATE TRIGGER tg_insert_submission 
AFTER INSERT
ON submission FOR EACH ROW
INSERT INTO submission_log
SET id             = NEW.id,
    asg_id         = NEW.asg_id,
    user_id        = NEW.user_id,
    filename       = NEW.filename,
    submission_date= NEW.submission_date,
    action         = 'ADD',
    action_date    = now()
    
CREATE TRIGGER tg_delete_submission 
BEFORE DELETE
ON submission FOR EACH ROW
INSERT INTO submission_log
SET id             = OLD.id,
    asg_id         = OLD.asg_id,
    user_id        = OLD.user_id,
    filename       = OLD.filename,
    submission_date= OLD.submission_date,
    action         = 'DELETE',
    action_date    = now()



DROP VIEW sv_assignment_staff;
CREATE VIEW sv_assignment_staff as
SELECT a.*, un.unit_code, un.unit_description, u.username, u.last_name, u.first_name, u.id as `sid`, u.email, u.permission_level
FROM assignment a, unit_staff us, unit un, `user` u 
WHERE a.unit_id = us.unit_id 
and us.username = u.username
and us.unit_id = un.id

DROP VIEW sv_unit_staff;
CREATE VIEW sv_unit_staff as
SELECT un.*,u.username, u.last_name, u.first_name, u.id as `sid`, u.email, u.permission_level
FROM unit un, unit_staff us, `user` u
WHERE un.id=us.unit_id
and us.username = u.username;

DROP VIEW sv_unit_student;
CREATE VIEW sv_unit_student as
SELECT u.username, u.last_name, u.first_name, u.id as `sid`, u.email, u.permission_level, un.*
FROM unit un, unit_enrol ue, `user` u
WHERE un.id=ue.unit_id
and ue.user_id = u.username
ORDER by username, unit_code
